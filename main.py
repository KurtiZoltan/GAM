import numpy as np
import matplotlib.pyplot as plt

#calibration
#energy (keV), net area, net area rel. error
calibration = np.array([
    [238.52, 114086, 0.36e-2],
    [2613.25, 7075, 1.98e-2],
    [579.92, 25962, 0.83e-2],
    [906.96, 16829, 1.03e-2]
    ]).transpose()

#granite
#energy (keV), net area, net area rel. error, I, eta, eta rel. error
granite = np.array([
    [351.32, 36043, 0.59e-2, 3.68936e-1, 219.75e-4, 9.045e-2], #214Pb
    [999.07, 620, 14.24e-2, 5.89230e-3  , 84.57e-4, 7.572e-2], #234Pa
    [186.69, 12230, 1.11e-2, 3.28000e-2, 313.71e-4, 9.099e-2], #226Ra
    [294.96, 23525, 0.88e-2, 1.91873e-1, 204.25e-4, 6.595e-2], #214Pb
    [1765.08, 4430, 1.91e-2, 1.61967e-1, 45.18e-4, 8.758e-2], #214Bi 
    [1118.60, 5706, 2.02e-2, 1.54967e-1, 70.23e-4, 9.289e-2], #214Bi
    [242.14, 10554, 1.74e-2, 7.45288e-2, 260.91e-4, 8.704e-2] #214Pb
    ])
    
#soil sample from nuclear explosion
#energy (keV), net area, net area rel. error, I, eta, eta rel. error
soil = np.array([
    [658.48 , 407, 5.65e-2, 0.899800, 110.82e-4, 8.559e-2], #134Cs (gamma coming from 134Ba)
    [120.94 , 437, 6.58e-2, 0.284320, 330.51e-4, 7.669e-2], #152Eu
    [343.37 , 172, 9.86e-2, 0.264880, 164.80e-4, 8.173e-2], #152Eu
    [1405.34, 27, 22.83e-2, 0.207470, 45.23e-4, 8.897e-2], #152Eu
    [776.66 , 50, 22.45e-2, 0.127410, 91.76e-4, 8.884e-2], #152Eu
    [244.89 , 65, 14.60e-2, 0.074935, 254.73e-4, 9.466e-2] #152Eu
    ]).transpose()

#intensity
#energy (MeV), eta, eta rel. error

eta = np.array([
    [0.122, 330.51e-4, 7.669e-2],
    [0.144, 405.09e-4, 9.160e-2],
    [0.186, 313.71e-4, 9.099e-2],
    [0.238, 269.13e-4, 9.275e-2],
    [0.242, 260.91e-4, 8.704e-2],
    [0.245, 254.73e-4, 9.466e-2],
    [0.295, 204.25e-4, 6.595e-2],
    [0.344, 164.80e-4, 8.173e-2],
    [0.351, 219.75e-4, 9.045e-2],
    [0.580, 128.66e-4, 9.067e-2],
    [0.609, 114.42e-4, 9.450e-2],
    [0.661, 110.82e-4, 8.559e-2],
    [0.778, 91.76e-4, 8.884e-2],
    [1.001, 84.57e-4, 7.572e-2],
    [1.118, 70.23e-4, 9.289e-2],
    [1.409, 45.23e-4, 8.897e-2],
    [1.765, 45.18e-4, 8.758e-2],
]).transpose()

plt.errorbar(eta[0], eta[1], yerr=eta[2]*eta[1], fmt=".")
plt.grid()
plt.show()

def intensity(x, t):
    I = x[1] / (x[3] * x[4] * t)
    dI = I * np.sqrt(x[2]**2 + x[5]**2)
    return np.array([I, dI])

for x in granite:
    print(intensity(x, 1000))
